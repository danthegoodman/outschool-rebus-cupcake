{"version":3,"sources":["pages/Manage.tsx","util/fetch.ts","img/CW-logo-2021-NAVY.png","pages/Start.tsx","component/RebusPuzzle.tsx","pages/Play.tsx","App.tsx","reportWebVitals.ts","util/auth.ts","index.tsx"],"names":["ManageView","RebusList","RebusInput","to","path","useState","error","setError","undefined","data","setData","useEffect","fetch","then","res","json","useGet","message","map","it","Rebus","rebus","solution","del","useCallback","body","method","JSON","stringify","useDelete","puzzle","ndx","text","src","image","alt","shortName","style","display","alignItems","className","marginLeft","fontSize","color","contributor","onClick","key","cursor","post","usePost","setPuzzle","setSolution","appleEmojisArray","Object","keys","appleEmojis","id","customEmojisArray","customEmojis","allEmojis","value","onChange","_e","newValue","newPlainTextValue","console","log","trigger","markup","appendSpaceOnAdd","renderSuggestion","suggestion","search","highlightedDisplay","index","focused","e","currentTarget","placeholder","StartMenu","Row","xs","Col","navyLogo","Jumbotron","Button","tag","Link","href","RebusPuzzle","parts","items","regex","lastEnd","match","exec","getEmojiUrl","push","slice","lastIndex","length","parseRebus","title","emojiCustom","emojiApple","PlayPage","gameId","useParams","PlayGame","Date","getTime","props","guesses","setGuesses","useFetch","encodeURIComponent","get","loading","hackingDetected","setHackingDetected","doSave","flushedGuesses","a","newData","useAutosave","onSave","interval","doMarkHacker","arg","hacker","devtools","isOpen","fn","event","detail","window","addEventListener","removeEventListener","puzzles","guess","backgroundColor","solutions","toLowerCase","onInput","handleInput","prev","next","target","renderRow","AppRoot","Container","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","jwtCookie","document","cookie","split","find","startsWith","parse","atob","email","picture","getUserData","location","assign","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.e9119bc5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { MentionsInput, Mention } from \"react-mentions\";\nimport { Link } from \"react-router-dom\";\nimport appleEmojis from \"../static/emoji-apple.json\";\nimport customEmojis from \"../static/emoji-custom.json\";\nimport { useGet, useDelete, usePost } from \"../util/fetch\";\n\nexport default function ManageView() {\n  return (\n    <div>\n      <h1>Outschool Rebus Puzzles</h1>\n      <RebusList />\n      <RebusInput />\n      <Link to=\"/start\">Back to Start Page</Link>\n    </div>\n  );\n}\n\ntype RebusDatum = { text: string } | { image: string; shortName: string };\n\ntype IRebus = {\n  key: string;\n  puzzle: RebusDatum[];\n  solution: string;\n  contributor: string | null;\n};\n\nfunction RebusList() {\n  const { data, error } = useGet<IRebus[]>(\"/api/rebus\");\n\n  if (error) return <div>Error: {error.message ?? error}</div>;\n  if (!data) return <div>Loading...</div>;\n\n  return (\n    <>\n      {data.map((it) => (\n        <Rebus key={it.solution} rebus={it} />\n      ))}\n    </>\n  );\n}\n\nfunction Rebus({ rebus }: { rebus: IRebus }) {\n  const { del } = useDelete(\"/api/rebus\");\n\n  function handleDelete() {\n    del({ key: rebus.key });\n  }\n\n  const puzzle = rebus.puzzle.map((it, ndx) =>\n    \"text\" in it ? (\n      <span key={ndx}>{it.text}</span>\n    ) : (\n      <img key={ndx} src={it.image} alt={it.shortName} />\n    )\n  );\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <p className=\"rebus\">\n        {puzzle} = {rebus.solution}\n        <span style={{ marginLeft: \"6px\", fontSize: \"12px\", color: \"gray\" }}>\n          (by: {rebus.contributor ?? \"unknown\"})\n        </span>\n      </p>\n      <span\n        onClick={handleDelete}\n        style={{ color: \"red\", marginLeft: \"20px\", cursor: \"pointer\" }}\n      >\n        X\n      </span>\n    </div>\n  );\n}\n\nfunction RebusInput() {\n  const { post } = usePost<IRebus[]>(\"/api/rebus\");\n  const [puzzle, setPuzzle] = useState(\"\");\n  const [solution, setSolution] = useState(\"\");\n\n  function handlePuzzleChange(\n    _e: unknown,\n    newValue: string,\n    newPlainTextValue: string\n  ) {\n    console.log({ newValue, newPlainTextValue });\n    setPuzzle(newValue);\n  }\n\n  function handleSolutionChange(e: React.SyntheticEvent<HTMLInputElement>) {\n    setSolution(e.currentTarget.value);\n  }\n\n  function handleSave() {\n    post({ puzzle, solution });\n  }\n\n  const appleEmojisArray = Object.keys(appleEmojis).map((key) => ({\n    id: key,\n    // @ts-ignore json loading stuff\n    display: appleEmojis[key],\n  }));\n  const customEmojisArray = Object.keys(customEmojis).map((key) => ({\n    id: key,\n    // @ts-ignore json loading stuff\n    display: customEmojis[key],\n  }));\n\n  const allEmojis = [...appleEmojisArray, ...customEmojisArray];\n\n  return (\n    <div>\n      <MentionsInput value={puzzle} onChange={handlePuzzleChange}>\n        <Mention\n          trigger=\":\"\n          markup=\"[__display__](__id__)\"\n          data={allEmojis}\n          appendSpaceOnAdd\n          renderSuggestion={(\n            suggestion,\n            search,\n            highlightedDisplay,\n            index,\n            focused\n          ) => {\n            return (\n              <div>\n                <img src={suggestion.display} alt=\"\" />\n              </div>\n            );\n          }}\n        />\n      </MentionsInput>\n      <input\n        value={solution}\n        onChange={handleSolutionChange}\n        placeholder=\"Potluck\"\n      />\n      <button onClick={handleSave}>Save</button>\n    </div>\n  );\n}\n","import {useCallback, useEffect, useState} from \"react\";\n\nexport function useGet<TData>(path: string) {\n  const [error, setError] = useState<Error | null>(null);\n  const [data, setData] = useState<TData | undefined>(undefined);\n\n  useEffect(() => {\n    fetch(path)\n      .then((res) => res.json())\n      .then(setData, setError);\n  }, [path]);\n\n  return { data, error } as const;\n}\n\nexport function usePost<TData>(path: string) {\n  const [error, setError] = useState<Error | null>(null);\n  const [data, setData] = useState<TData | undefined>(undefined);\n\n  const post = useCallback(\n    (body) => {\n      fetch(path, { method: \"POST\", body: JSON.stringify(body) })\n        .then((res) => res.json())\n        .then(setData, setError);\n    },\n    [path]\n  );\n\n  return { data, error, post } as const;\n}\n\nexport function useDelete(path: string) {\n  const [error, setError] = useState<Error | null>(null);\n\n  const del = useCallback(\n    (body) => {\n      fetch(path, { method: \"DELETE\", body: JSON.stringify(body) })\n        .then((res) => res.json())\n        .then(() => {}, setError);\n    },\n    [path]\n  );\n\n  return { error, del } as const;\n}\n","export default __webpack_public_path__ + \"static/media/CW-logo-2021-NAVY.1aaec414.png\";","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Button, Col, Jumbotron, Row } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport navyLogo from \"../img/CW-logo-2021-NAVY.png\";\n\nexport default function StartMenu() {\n  return (\n    <>\n      <Row className=\"py-4 mx-2\" xs={2}>\n        <Col xs={3} />\n        <Col className=\"px-4 mx-2\" xs={6}>\n          <img\n            className=\"img-fluid\"\n            src={navyLogo}\n            alt=\"Cupcake Week 2021 boombox logo\"\n          />\n        </Col>\n        <Col xs={3} />\n      </Row>\n      <Row className=\"py-4 mx-2\">\n        <Col>\n          <Jumbotron className=\"m-4 p-4 bg-mango rounded\">\n            <h1>Outschool Rebus Puzzles</h1>\n            <p className=\"lead\">\n              Challenge your friends and coworkers to some good-natured\n              competition.\n            </p>\n            <hr className=\"my-2\" />\n            <p>Start a game below</p>\n            <p className=\"lead\">\n              <Button tag={Link} color=\"primary\" to=\"/play\">\n                Play!\n              </Button>\n            </p>\n\n            <p>Or add/delete rebus puzzles:</p>\n            <p className=\"lead\">\n              <Button tag={Link} color=\"primary\" to=\"/manage\">\n                Manage!\n              </Button>\n            </p>\n          </Jumbotron>\n        </Col>\n      </Row>\n      <Row className=\"py-4 mx-2\">\n        <Col className=\"px-4 mx-2 float-sm-right\" xs={2}>\n          <Button className=\"ghost\" href=\"/auth/logout\">\n            Logout\n          </Button>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from \"react\";\nimport emojiApple from '../static/emoji-apple.json';\nimport emojiCustom from '../static/emoji-custom.json';\n\nexport function RebusPuzzle({puzzle}: {puzzle: string}){\n  const parts = parseRebus(puzzle).map((it, ndx) =>\n    \"text\" in it ? (\n      <span key={ndx}>{it.text}</span>\n    ) : (\n      <img key={ndx} src={it.image} alt={it.shortName} title={it.shortName}/>\n    )\n  );\n\n  return (<p className=\"rebus\" title={puzzle}>{parts}</p>)\n}\n\ntype RebusDatum = { text: string } | { image: string; shortName: string };\n\nfunction parseRebus(puzzle: string): RebusDatum[] {\n  let items: RebusDatum[] = [];\n\n  const regex = /:([^:]+):/g;\n  let lastEnd = 0;\n  while (true) {\n    const match = regex.exec(puzzle);\n    if (!match) break;\n\n    const shortName = match[1];\n    const image = getEmojiUrl(shortName);\n    if (!image) continue;\n\n    if (match.index !== lastEnd) {\n      items.push({text: puzzle.slice(lastEnd, match.index)});\n    }\n    items.push({image, shortName})\n    lastEnd = regex.lastIndex;\n  }\n  if (lastEnd !== puzzle.length) {\n    items.push({text: puzzle.slice(lastEnd)});\n  }\n\n  return items;\n}\n\n\n\nexport function getEmojiUrl(shortName: string): string | undefined {\n  //@ts-ignore these are lookup maps, not strongly typed json objects\n  return emojiCustom[shortName] ?? emojiApple[shortName];\n}\n\n\n","import React, {useState, useEffect, useCallback} from \"react\";\nimport {Button, Jumbotron} from \"reactstrap\";\nimport {Link, Redirect, useParams} from \"react-router-dom\";\nimport {RebusPuzzle} from \"../component/RebusPuzzle\";\nimport useFetch from \"use-http\";\nimport {useAutosave} from \"react-autosave\"\nimport devtools from \"devtools-detect\";\nexport default function PlayPage() {\n  const {gameId} = useParams<{gameId?: string}>();\n  if(!gameId){\n    return <Redirect to={`/play/${new Date().getTime()}`}/>\n  }\n\n  return (\n    <div>\n      <Jumbotron className=\"m-4 p-4 bg-mango\">\n        <h1>Outschool Rebus Puzzles</h1>\n        <PlayGame gameId={gameId}/>\n      </Jumbotron>\n      <Link to=\"/start\">Back to Start Page</Link>\n    </div>\n  );\n}\nconst IS_DEVMODE = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\ntype GameData = {\n  id: string;\n  email: string;\n  puzzles: string[];\n  solutions: string[];\n  guesses: string[];\n  hacker: boolean;\n}\nfunction PlayGame(props: {gameId: string}){\n  const [guesses, setGuesses] = useState<string[]>([]);\n  const {get, post, data, loading, error} = useFetch<GameData>(`/api/game?id=${encodeURIComponent(props.gameId)}`);\n  const [hackingDetected, setHackingDetected] = useState(false);\n\n  const doSave = useCallback(async (flushedGuesses: string[])=>{\n    console.log(data?.guesses, flushedGuesses);\n    if(!flushedGuesses.length) return;\n    if(JSON.stringify(data?.guesses) === JSON.stringify(flushedGuesses)) return;\n\n    const newData = {...data};\n    newData.guesses = flushedGuesses;\n    return post(newData);\n  }, [post, data])\n  useAutosave({data: guesses, onSave: doSave, interval: 3000})\n\n  const doMarkHacker = useCallback((arg?: boolean)=>{\n    if (!arg && IS_DEVMODE) {\n      console.log(\"you would have been marked a hacker, but this is development. You can call DO_MARK_HACKER from here to trigger this anyway.\")\n      return\n    }\n    setHackingDetected(true);\n    const newData = {...data};\n    newData.hacker = true;\n    post(newData)\n  }, [post, data]);\n  useEffect(() => { get() }, [])\n  useEffect(()=>{\n    if(!data) return\n    if(IS_DEVMODE){\n      (window as any).DO_MARK_HACKER = ()=> doMarkHacker(true);\n    }\n    setGuesses(data.guesses);\n    setHackingDetected(data.hacker);\n    if(!data.hacker && devtools.isOpen){\n      doMarkHacker();\n    }\n  }, [data, doMarkHacker])\n\n  useEffect(()=> {\n    let fn = (event: any) => {\n      if(event.detail.isOpen){\n        doMarkHacker();\n      }\n    }\n    window.addEventListener('devtoolschange', fn);\n    return ()=> {\n      window.removeEventListener('devtoolschange', fn);\n    }\n  }, [data, doMarkHacker])\n\n\n  if(hackingDetected){\n    return (\n      <div>\n        <p><img src=\"/mrresetti.png\"/></p>\n        <p>NO! YOU CANNOT USE THE DEVTOOLS HERE! YOUR GAME IS NULL AND VOID.</p>\n      </div>\n    );\n  }\n\n  if(error) return <div>{error.message ?? error}</div>\n  if(!data) return <div>Loading...</div>;\n\n  //TODO loading image when saving or when needing to save?\n  return (\n    <div>\n      <table>\n        <thead>\n        <tr>\n          <th>Rebus</th>\n          <th>Your Guess</th>\n        </tr>\n        </thead>\n        <tbody>\n        {data.puzzles.map((it,ndx)=> renderRow(ndx))}\n        </tbody>\n      </table>\n    </div>\n  );\n\n  function renderRow(index: number){\n    const puzzle = data?.puzzles[index] ?? \"\";\n    const guess = guesses?.[index] ?? \"\";\n    const soln = data?.solutions[index] ?? \"\";\n\n    const backgroundColor =\n      soln.toLowerCase() === guess.toLowerCase()\n      ? \"#0F0\"\n      : \"#F44\";\n\n    return (\n      <tr key={puzzle}>\n        <td><RebusPuzzle puzzle={puzzle}/></td>\n        <td><input value={guess} onInput={handleInput} style={{backgroundColor}}/></td>\n      </tr>\n    )\n    function handleInput(e: any){\n      setGuesses(prev=>{\n        const next = [...prev];\n        next[index] = e.target.value;\n        return next;\n      })\n    }\n  }\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport ManageView from \"./pages/Manage\";\nimport StartMenu from \"./pages/Start\";\nimport Play from \"./pages/Play\";\n\nexport function AppRoot() {\n  return (\n    <Container fluid className=\"bg-teal h-100 mh-100 \">\n      <Switch>\n        <Route path=\"/start\">\n          <StartMenu />\n        </Route>\n        <Route path=\"/play/:gameId?\">\n          <Play />\n        </Route>\n        <Route path=\"/manage\">\n          <ManageView />\n        </Route>\n        <Route>\n          <Redirect to=\"/start\" />\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default AppRoot;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function getUserData(): {email: string, picture: string} {\n  const cookies = document.cookie?.split('; ');\n  const jwtCookie = cookies.find(it => it.startsWith('JWT='));\n\n  // This will only be null in development mode if not-authed\n  // or if something has gone horribly wrong in production.\n  if(!jwtCookie) return null as any\n\n  const {email, picture} = JSON.parse(atob(jwtCookie.split('.')[1]));\n  return {email, picture};\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { getUserData } from \"./util/auth\";\nimport { Container } from \"reactstrap\";\n\nif (!getUserData()) {\n  window.location.assign(\"/auth/login\");\n} else {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Container fluid className=\"bg-teal mh-100\">\n        <Router>\n          <App />\n        </Router>\n      </Container>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}