{"version":3,"sources":["App.tsx","reportWebVitals.ts","auth.ts","index.tsx"],"names":["RebusList","path","useState","error","setError","undefined","data","setData","useEffect","fetch","then","res","json","useGet","message","map","it","Rebus","rebus","solution","del","useCallback","body","method","JSON","stringify","useDelete","puzzle","ndx","text","src","image","alt","shortName","style","display","alignItems","className","onClick","key","color","marginLeft","cursor","RebusInput","post","usePost","setPuzzle","setSolution","value","onChange","e","currentTarget","placeholder","AppRoot","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","jwtCookie","document","cookie","split","find","startsWith","parse","atob","email","picture","getUserData","window","location","assign","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.c1833681.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nexport function AppRoot() {\n  return (\n    <div>\n      <h1>Outschool Rebus Puzzles</h1>\n      <RebusList />\n      <RebusInput />\n      <a href=\"/auth/logout\">Logout</a>\n    </div>\n  );\n}\n\ntype RebusDatum = { text: string } | { image: string; shortName: string };\n\ntype IRebus = {\n  key: string;\n  puzzle: RebusDatum[];\n  solution: string;\n};\n\nfunction RebusList() {\n  const { data, error } = useGet<IRebus[]>(\"/api/rebus\");\n\n  if (error) return <div>Error: {error.message ?? error}</div>;\n  if (!data) return <div>Loading...</div>;\n\n  return (\n    <>\n      {data.map((it) => (\n        <Rebus key={it.solution} rebus={it} />\n      ))}\n    </>\n  );\n}\n\nfunction Rebus({ rebus }: { rebus: IRebus }) {\n  const { del } = useDelete(\"/api/rebus\");\n\n  function handleDelete() {\n    del({ key: rebus.key });\n  }\n\n  const puzzle = rebus.puzzle.map((it, ndx) =>\n    \"text\" in it ? (\n      <span key={ndx}>{it.text}</span>\n    ) : (\n      <img key={ndx} src={it.image} alt={it.shortName} />\n    )\n  );\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <p className=\"rebus\">\n        {puzzle} = {rebus.solution}\n      </p>\n      <span\n        onClick={handleDelete}\n        style={{ color: \"red\", marginLeft: \"20px\", cursor: \"pointer\" }}\n      >\n        X\n      </span>\n    </div>\n  );\n}\n\nfunction RebusInput() {\n  const { post } = usePost<IRebus[]>(\"/api/rebus\");\n  const [puzzle, setPuzzle] = useState(\"\");\n  const [solution, setSolution] = useState(\"\");\n\n  function handlePuzzleChange(e: React.SyntheticEvent<HTMLInputElement>) {\n    setPuzzle(e.currentTarget.value);\n  }\n\n  function handleSolutionChange(e: React.SyntheticEvent<HTMLInputElement>) {\n    setSolution(e.currentTarget.value);\n  }\n\n  function handleSave() {\n    post({ puzzle, solution });\n  }\n\n  return (\n    <div>\n      <input\n        value={puzzle}\n        onChange={handlePuzzleChange}\n        placeholder=\":teapot::clover:\"\n      />\n      <input\n        value={solution}\n        onChange={handleSolutionChange}\n        placeholder=\"Potluck\"\n      />\n      <button onClick={handleSave}>Save</button>\n    </div>\n  );\n}\n\nfunction useGet<TData>(path: string) {\n  const [error, setError] = useState<Error | null>(null);\n  const [data, setData] = useState<TData | undefined>(undefined);\n\n  useEffect(() => {\n    fetch(path)\n      .then((res) => res.json())\n      .then(setData, setError);\n  }, [path]);\n\n  return { data, error } as const;\n}\n\nfunction usePost<TData>(path: string) {\n  const [error, setError] = useState<Error | null>(null);\n  const [data, setData] = useState<TData | undefined>(undefined);\n\n  const post = useCallback(\n    (body) => {\n      fetch(path, { method: \"POST\", body: JSON.stringify(body) })\n        .then((res) => res.json())\n        .then(setData, setError);\n    },\n    [path]\n  );\n\n  return { data, error, post } as const;\n}\n\nfunction useDelete(path: string) {\n  const [error, setError] = useState<Error | null>(null);\n\n  const del = useCallback(\n    (body) => {\n      fetch(path, { method: \"DELETE\", body: JSON.stringify(body) })\n        .then((res) => res.json())\n        .then(() => {}, setError);\n    },\n    [path]\n  );\n\n  return { error, del } as const;\n}\n\nexport default AppRoot;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function getUserData(): {email: string, picture: string} {\n  const cookies = document.cookie?.split('; ');\n  const jwtCookie = cookies.find(it => it.startsWith('JWT='));\n\n  // This will only be null in development mode if not-authed\n  // or if something has gone horribly wrong in production.\n  if(!jwtCookie) return null as any\n\n  const {email, picture} = JSON.parse(atob(jwtCookie.split('.')[1]));\n  return {email, picture};\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {getUserData} from \"./auth\";\n\nif(!getUserData()){\n  window.location.assign('/auth/login');\n} else {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}