{"version":3,"sources":["util/fetch.ts","pages/Manage.tsx","pages/Start.tsx","pages/Play.tsx","App.tsx","reportWebVitals.ts","util/auth.ts","index.tsx"],"names":["useGet","path","useState","error","setError","undefined","data","setData","useEffect","fetch","then","res","json","ManageView","RebusList","RebusInput","to","message","map","it","Rebus","rebus","solution","del","useCallback","body","method","JSON","stringify","useDelete","puzzle","ndx","text","src","image","alt","shortName","style","display","alignItems","className","marginLeft","fontSize","color","contributor","onClick","key","cursor","post","usePost","setPuzzle","setSolution","appleEmojisArray","Object","keys","appleEmojis","id","customEmojisArray","customEmojis","allEmojis","value","onChange","_e","newValue","newPlainTextValue","console","log","trigger","markup","appendSpaceOnAdd","renderSuggestion","suggestion","search","highlightedDisplay","index","focused","e","currentTarget","placeholder","StartMenu","Jumbotron","Button","tag","Link","href","PlayPage","gameId","useParams","PlayGame","Date","getTime","props","encodeURIComponent","AppRoot","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","jwtCookie","document","cookie","split","find","startsWith","parse","atob","email","picture","getUserData","window","location","assign","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.b5615f38.chunk.js","sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\n\nexport function useGet<TData>(path: string) {\n  const [error, setError] = useState<Error | null>(null);\n  const [data, setData] = useState<TData | undefined>(undefined);\n\n  useEffect(() => {\n    fetch(path)\n      .then((res) => res.json())\n      .then(setData, setError);\n  }, [path]);\n\n  return { data, error } as const;\n}\n\nexport function usePost<TData>(path: string) {\n  const [error, setError] = useState<Error | null>(null);\n  const [data, setData] = useState<TData | undefined>(undefined);\n\n  const post = useCallback(\n    (body) => {\n      fetch(path, { method: \"POST\", body: JSON.stringify(body) })\n        .then((res) => res.json())\n        .then(setData, setError);\n    },\n    [path]\n  );\n\n  return { data, error, post } as const;\n}\n\nexport function useDelete(path: string) {\n  const [error, setError] = useState<Error | null>(null);\n\n  const del = useCallback(\n    (body) => {\n      fetch(path, { method: \"DELETE\", body: JSON.stringify(body) })\n        .then((res) => res.json())\n        .then(() => {}, setError);\n    },\n    [path]\n  );\n\n  return { error, del } as const;\n}\n","import React, { useState } from \"react\";\nimport { MentionsInput, Mention } from \"react-mentions\";\nimport { Link } from \"react-router-dom\";\nimport appleEmojis from \"../static/emoji-apple.json\";\nimport customEmojis from \"../static/emoji-custom.json\";\nimport { useGet, useDelete, usePost } from \"../util/fetch\";\n\nexport default function ManageView() {\n  return (\n    <div>\n      <h1>Outschool Rebus Puzzles</h1>\n      <RebusList />\n      <RebusInput />\n      <Link to=\"/start\">Back to Start Page</Link>\n    </div>\n  );\n}\n\ntype RebusDatum = { text: string } | { image: string; shortName: string };\n\ntype IRebus = {\n  key: string;\n  puzzle: RebusDatum[];\n  solution: string;\n  contributor: string | null;\n};\n\nfunction RebusList() {\n  const { data, error } = useGet<IRebus[]>(\"/api/rebus\");\n\n  if (error) return <div>Error: {error.message ?? error}</div>;\n  if (!data) return <div>Loading...</div>;\n\n  return (\n    <>\n      {data.map((it) => (\n        <Rebus key={it.solution} rebus={it} />\n      ))}\n    </>\n  );\n}\n\nfunction Rebus({ rebus }: { rebus: IRebus }) {\n  const { del } = useDelete(\"/api/rebus\");\n\n  function handleDelete() {\n    del({ key: rebus.key });\n  }\n\n  const puzzle = rebus.puzzle.map((it, ndx) =>\n    \"text\" in it ? (\n      <span key={ndx}>{it.text}</span>\n    ) : (\n      <img key={ndx} src={it.image} alt={it.shortName} />\n    )\n  );\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <p className=\"rebus\">\n        {puzzle} = {rebus.solution}\n        <span style={{ marginLeft: \"6px\", fontSize: \"12px\", color: \"gray\" }}>\n          (by: {rebus.contributor ?? \"unknown\"})\n        </span>\n      </p>\n      <span\n        onClick={handleDelete}\n        style={{ color: \"red\", marginLeft: \"20px\", cursor: \"pointer\" }}\n      >\n        X\n      </span>\n    </div>\n  );\n}\n\nfunction RebusInput() {\n  const { post } = usePost<IRebus[]>(\"/api/rebus\");\n  const [puzzle, setPuzzle] = useState(\"\");\n  const [solution, setSolution] = useState(\"\");\n\n  function handlePuzzleChange(\n    _e: unknown,\n    newValue: string,\n    newPlainTextValue: string\n  ) {\n    console.log({ newValue, newPlainTextValue });\n    setPuzzle(newValue);\n  }\n\n  function handleSolutionChange(e: React.SyntheticEvent<HTMLInputElement>) {\n    setSolution(e.currentTarget.value);\n  }\n\n  function handleSave() {\n    post({ puzzle, solution });\n  }\n\n  const appleEmojisArray = Object.keys(appleEmojis).map((key) => ({\n    id: key,\n    // @ts-ignore json loading stuff\n    display: appleEmojis[key],\n  }));\n  const customEmojisArray = Object.keys(customEmojis).map((key) => ({\n    id: key,\n    // @ts-ignore json loading stuff\n    display: customEmojis[key],\n  }));\n\n  const allEmojis = [...appleEmojisArray, ...customEmojisArray];\n\n  return (\n    <div>\n      <MentionsInput value={puzzle} onChange={handlePuzzleChange}>\n        <Mention\n          trigger=\":\"\n          markup=\"[__display__](__id__)\"\n          data={allEmojis}\n          appendSpaceOnAdd\n          renderSuggestion={(\n            suggestion,\n            search,\n            highlightedDisplay,\n            index,\n            focused\n          ) => {\n            return (\n              <div>\n                <img src={suggestion.display} alt=\"\" />\n              </div>\n            );\n          }}\n        />\n      </MentionsInput>\n      <input\n        value={solution}\n        onChange={handleSolutionChange}\n        placeholder=\"Potluck\"\n      />\n      <button onClick={handleSave}>Save</button>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Button, Jumbotron } from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\n\nexport default function StartMenu() {\n  return (\n    <div>\n      <Jumbotron className=\"m-4 p-4 bg-mango\">\n        <h1>Outschool Rebus Puzzles</h1>\n        <p className=\"lead\">\n          Challenge your friends and coworkers to some good-natured competition.\n        </p>\n        <hr className=\"my-2\" />\n        <p>Start a game below</p>\n        <p className=\"lead\">\n          <Button tag={Link} color=\"primary\" to=\"/play\">\n            Play!\n          </Button>\n        </p>\n\n        <p>Or add/delete rebus puzzles:</p>\n        <p className=\"lead\">\n          <Button tag={Link} color=\"primary\" to=\"/manage\">\n            Manage!\n          </Button>\n        </p>\n      </Jumbotron>\n      <a href=\"/auth/logout\">Logout</a>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Jumbotron } from \"reactstrap\";\nimport {Link, Redirect, useParams} from \"react-router-dom\";\nimport {useGet} from \"../util/fetch\";\n\nexport default function PlayPage() {\n  const {gameId} = useParams<{gameId?: string}>();\n  if(!gameId){\n    return <Redirect to={`/play/${new Date().getTime()}`}/>\n  }\n\n  return (\n    <div>\n      <Jumbotron className=\"m-4 p-4 bg-mango\">\n        <h1>Outschool Rebus Puzzles</h1>\n        <PlayGame gameId={gameId}/>\n      </Jumbotron>\n      <Link to=\"/start\">Back to Start Page</Link>\n    </div>\n  );\n}\n\nfunction PlayGame(props: {gameId: string}){\n  const {data, error} = useGet(`/api/game?id=${encodeURIComponent(props.gameId)}`);\n\n  if(error) return <div>{error.message ?? error}</div>\n  if(!data) return <div>Loading...</div>;\n  return <pre>gameData={JSON.stringify(data, null,2)}</pre>\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ManageView from \"./pages/Manage\";\nimport StartMenu from \"./pages/Start\";\nimport Play from \"./pages/Play\";\n\nexport function AppRoot() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/start\">\n          <StartMenu />\n        </Route>\n        <Route path=\"/play/:gameId?\">\n          <Play />\n        </Route>\n        <Route path=\"/manage\">\n          <ManageView />\n        </Route>\n        <Route>\n          <Redirect to=\"/start\" />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default AppRoot;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function getUserData(): {email: string, picture: string} {\n  const cookies = document.cookie?.split('; ');\n  const jwtCookie = cookies.find(it => it.startsWith('JWT='));\n\n  // This will only be null in development mode if not-authed\n  // or if something has gone horribly wrong in production.\n  if(!jwtCookie) return null as any\n\n  const {email, picture} = JSON.parse(atob(jwtCookie.split('.')[1]));\n  return {email, picture};\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {getUserData} from \"./util/auth\";\n\nif(!getUserData()){\n  window.location.assign('/auth/login');\n} else {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}